service: notteru-bot-service
frameworkVersion: '3'
configValidationMode: error
useDotenv: true
deprecationNotificationMode: warn:summary

provider:
  name: aws
  region: us-east-1
  runtime: provided.al2
  environment:
    DENO_IMPORTMAP: import_map.json
    HANDLER_EXT: js
    # BOT_TOKEN and CHANNEL_ID to be set in .env
    BOT_TOKEN: ${env:BOT_TOKEN}
    CHANNEL_ID: ${env:CHANNEL_ID}
    ADMIN_ID: ${env:ADMIN_ID}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - Fn::GetAtt: [queriesTable, Arn]

package:
  patterns:
    - '!**/*'
    - 'bundle.js'
    # - 'src/bot.ts'
    # - 'src/lambda.ts'
    - 'import_map.json'
    # - '.deno_dir/**'
    # - '!.deno_dir/gen/file/**'

functions:
  webhook:
    handler: bundle.webhook
    description: Handle Telegram Bot API webhook update
    memorySize: 256
    url: true
    timeout: 15
    layers:
      - !GetAtt Deno.Outputs.LayerArn

  periodic:
    handler: bundle.periodic
    description: Crawl for query updates
    memorySize: 512
    timeout: 20
    events:
      - schedule: cron(0 * * * ? *)
    layers:
      - !GetAtt Deno.Outputs.LayerArn

resources:
  Transform: AWS::Serverless-2016-10-31
  Resources:
    Deno:
      Type: AWS::Serverless::Application
      Properties:
        Location:
          ApplicationId: arn:aws:serverlessrepo:us-east-1:390065572566:applications/deno
          SemanticVersion: 1.23.0

    queriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: queries
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH

plugins:
  - serverless-scriptable-plugin

custom:
  scriptHooks:
    before:package:createDeploymentArtifacts: deno bundle --importmap import_map.json src/lambda.ts -- bundle.js
    # before:package:createDeploymentArtifacts: DENO_DIR=.deno_dir deno cache src/lambda.ts src/bot.ts --importmap import_map.json && cp -R .deno_dir/gen/file/$PWD/ .deno_dir/LAMBDA_TASK_ROOT
